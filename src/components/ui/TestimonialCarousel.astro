---
import CldImage from '../ui/CldImage.astro';

let testimonies = [
    {
        header: "Nicole's program was a game-changer for my business.",
        quote: 'I was teetering on breaking even each month and within a few short weeks, I turned a profit and have continued ever since. The changes that she worked with me were minor adjustments that created a huge difference in my busines',
        name: 'Karyna Goldman',
        company: 'Triangle Foundry',
        img: 'karyna',
    },
    {
        header: 'Nicole is the best investment you will make into your studio business.',
        quote: "“We set up SOPs, rebranded our studio's foundation and changed our whole sales process. {In 4 months} My investment in her program has already been returned and then some.”",
        name: 'Courtney Brooks',
        company: 'Soul Sweat',
        img: 'courtney',
    },
    {
        header: 'If you put in the work and do the things Nicole suggests, you will succeed!',
        quote: '“I started working with Nicole in the spring of 2021 when I was on the verge of closing the studio due to COVID. Nicole taught me so many things that not only turned my business around but we are now thriving and ready to expand 6 months later.”',
        name: 'Kate Goodyear',
        company: 'Nectar Yoga',
        img: 'Kate',
    },
];
---

<div
    x-data="{
        skip: 1,
        atBeginning: false,
        atEnd: false,
        next() {
            this.to((current, offset) => current + (offset * this.skip))
        },
        prev() {
            this.to((current, offset) => current - (offset * this.skip))
        },
        to(strategy) {
            let slider = this.$refs.slider
            let current = slider.scrollLeft
            let offset = slider.firstElementChild.getBoundingClientRect().width
            slider.scrollTo({ left: strategy(current, offset), behavior: 'smooth' })
        },
        focusableWhenVisible: {
            'x-intersect:enter'() {
                this.$el.removeAttribute('tabindex')
            },
            'x-intersect:leave'() {
                this.$el.setAttribute('tabindex', '-1')
            },
        },
        disableNextAndPreviousButtons: {
            'x-intersect:enter.threshold.05'() {
                let slideEls = this.$el.parentElement.children

                // If this is the first slide.
                if (slideEls[0] === this.$el) {
                    this.atBeginning = true
                // If this is the last slide.
                } else if (slideEls[slideEls.length-1] === this.$el) {
                    this.atEnd = true
                }
            },
            'x-intersect:leave.threshold.05'() {
                let slideEls = this.$el.parentElement.children

                // If this is the first slide.
                if (slideEls[0] === this.$el) {
                    this.atBeginning = false
                // If this is the last slide.
                } else if (slideEls[slideEls.length-1] === this.$el) {
                    this.atEnd = false
                }
            },
        },
    }"
    class="flex flex-col w-full"
>
    <div
        x-on:keydown.right="next"
        x-on:keydown.left="prev"
        tabindex="0"
        role="region"
        aria-labelledby="carousel-label"
        class="flex flex-col space-x-6"
    >
        <h2 id="carousel-label" class="sr-only" hidden>Carousel</h2>

        <span id="carousel-content-label" class="sr-only" hidden>Carousel</span>

        <ul
            x-ref="slider"
            tabindex="0"
            role="listbox"
            aria-labelledby="carousel-content-label"
            class="flex w-full overflow-x-scroll snap-x snap-mandatory"
        >
            {
                testimonies.map((testimony) => (
                    <li
                        x-bind="disableNextAndPreviousButtons"
                        class="grid w-full gap-6 p-2 lg:grid-cols-12 shrink-0 snap-start"
                        role="option"
                    >
                        <div class="col-span-7 space-y-4">
                            <h4 class="text-xl italic font-bold text-sparkHeader">
                                {testimony.header}
                            </h4>
                            <p class="text-2xl font-normal leading-normal text-sparkBody">
                                {testimony.quote}
                            </p>
                            <div>
                                <CldImage
                                    width="64"
                                    height="64"
                                    src={`clients/spark-strategies/${testimony.img}.jpg`}
                                    alt={testimony.name}
                                    class="object-cover rounded-full shadow-sm sm:hidden"
                                />
                                <span>{testimony.name}</span>
                                <span>{testimony.company}</span>
                            </div>
                        </div>
                        <div class="hidden col-span-4 col-start-8 lg:block">
                            <CldImage
                                width="832"
                                height="392"
                                src={`clients/spark-strategies/${testimony.img}.jpg`}
                                alt={testimony.name}
                                class="object-cover lg:h-full lg:shadow-xl rounded-2xl"
                            />
                        </div>
                    </li>
                ))
            }
        </ul>
        <div class="flex gap-4">
            <button
                x-on:click="prev"
                class="inline-block rounded-full bg-sparkRaspberry"
                :aria-disabled="atBeginning"
                :tabindex="atEnd ? -1 : 0"
                :class="{ 'opacity-50 cursor-not-allowed': atBeginning }"
            >
                <span aria-hidden="true">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="w-8 h-8 text-sparkPeach"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        stroke-width="3"
                        ><path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"
                        ></path>
                    </svg>
                </span>
                <span class="sr-only">Skip to previous slide page</span>
            </button>
            <button
                x-on:click="next"
                class="inline-block rounded-full bg-sparkRaspberry"
                :aria-disabled="atEnd"
                :tabindex="atEnd ? -1 : 0"
                :class="{ 'opacity-50 cursor-not-allowed': atEnd }"
            >
                <div aria-hidden="true">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="w-8 h-8 text-sparkPeach"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                        stroke-width="3"
                        ><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"
                        ></path>
                    </svg>
                </div>
                <span class="sr-only">Skip to next slide page</span>
            </button>
        </div>
    </div>
</div>
